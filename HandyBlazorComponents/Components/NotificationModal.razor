<div class="modal fade @(isVisible ? "show d-block" : "")" tabindex="-1" style="background: rgba(0, 0, 0, 0.5);">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" @onclick="Hide"></button>
            </div>
            <div class="modal-body">
                <p class="@modalClass">@BodyText</p>
               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Hide">Close</button>
            </div>
        </div>
    </div>
</div>


@code {
    private bool isVisible = false;
    private string modalClass = string.Empty;
    private TaskCompletionSource? taskCompletionSource;
 
    private string Title { get; set; } = "Notification";
    private string BodyText { get; set; } = "Message";
 
    public Task ShowAsync(string title, string message, HandyModalType modalType)
    {
        Title = title;
        BodyText = message;
        SetModalClass(modalType);
        isVisible = true;
        taskCompletionSource = new TaskCompletionSource();
        StateHasChanged();
        return taskCompletionSource.Task;
    }

    private void Hide()
    {
        taskCompletionSource?.SetResult();
        isVisible = false;
        StateHasChanged();
    }
 
    private void SetModalClass(HandyModalType modalType)
    {
        modalClass = modalType switch
        {
            HandyModalType.SUCCESS => "text-success",
            HandyModalType.WARNING => "text-warning",
            HandyModalType.ERROR => "text-danger",
            HandyModalType.INFO => "text-info",
            _ => ""
        };
    }
}